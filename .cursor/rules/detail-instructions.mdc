---
description:
globs:
alwaysApply: false
---


## 家族車共有アプリ - 設計ドキュメント

### プロジェクト概要

このドキュメントは、\*\*「家族車共有アプリ」\*\*の開発におけるアーキテクチャ、フォルダ構成、設計原則、および実装の詳細を定めたものです。本ドキュメントは、プロジェクトの効率的な開発、高い保守性、そして品質の維持を目的としています。

### 1\. プロジェクトの全体構成

プロジェクトは、クリーンアーキテクチャの原則に基づき、機能と責務ごとに明確に分離された階層的な構造を採用しています。

miecar/
├── .github/
│   ├── workflows/
│   │   ├── ci.yml
│   │   ├── cd.yml
│   │   ├── pr-check.yml
│   │   └── release.yml
│   ├── ISSUE_TEMPLATE/
│   │   ├── bug_report.yml
│   │   ├── feature_request.yml
│   │   └── config.yml
│   ├── pull_request_template.md
│   └── CODEOWNERS
├── .husky/
│   ├── pre-commit
│   ├── pre-push
│   └── commit-msg
├── .vscode/
│   ├── settings.json
│   ├── extensions.json
│   └── launch.json
├── app.json
├── babel.config.js
├── expo-env.d.ts
├── package.json
├── package-lock.json
├── tsconfig.json
├── metro.config.js
├── .env.example
├── .env.local                # ← 版管理しない想定（.gitignoreで除外）
├── .env.development          # ← 同上
├── .env.staging              # ← 同上
├── .env.production           # ← 同上
├── .gitignore
├── .eslintrc.js
├── .prettierrc.js
├── .prettierignore
├── .editorconfig
├── jest.config.js            # （必要なら残す。今回はテスト未使用の想定）
├── commitlint.config.js
├── lint-staged.config.js
├── README.md
├── CHANGELOG.md
├── CONTRIBUTING.md
├── docs/
│   ├── API.md
│   ├── DEPLOYMENT.md
│   ├── DEVELOPMENT.md
│   ├── CHANGELOG.md          # ※ 片方に統一するなら後で削除/リンク
│   └── USER_GUIDE.md
├── legal/
│   ├── privacy-policy.md
│   ├── terms-of-service.md
│   ├── licenses/
│   │   ├── MIT.txt
│   │   ├── Apache-2.0.txt
│   │   └── BSD-3-Clause.txt
│   └── third-party-licenses.json
├── scripts/
│   ├── build.sh
│   ├── deploy.sh
│   ├── setup.sh
│   ├── test.sh               # テスト不要なら後で削除可
│   ├── lint.sh
│   └── prepare-release.sh
├── app/                      # ← Expo Router ページ（トップ直下）
│   ├── (auth)/
│   │   ├── _layout.tsx
│   │   ├── login.tsx
│   │   ├── register.tsx
│   │   ├── forgot-password.tsx
│   │   ├── reset-password.tsx
│   │   ├── forgot-email.tsx
│   │   ├── verify-identity.tsx
│   │   ├── family-join.tsx
│   │   ├── family-create.tsx
│   │   └── family-switch.tsx
│   ├── (tabs)/
│   │   ├── _layout.tsx
│   │   ├── calendar.tsx
│   │   ├── reservations.tsx
│   │   ├── add-reservation.tsx
│   │   ├── profile.tsx
│   │   ├── settings.tsx
│   │   └── help.tsx
│   ├── help/
│   │   ├── _layout.tsx
│   │   ├── index.tsx
│   │   ├── how-to-use.tsx
│   │   ├── faq.tsx
│   │   ├── contact.tsx
│   │   ├── about.tsx
│   │   ├── privacy-policy.tsx
│   │   ├── terms-of-service.tsx
│   │   ├── licenses.tsx
│   │   └── release-notes.tsx
│   ├── modal/
│   │   ├── reservation-detail.tsx
│   │   ├── edit-reservation.tsx
│   │   ├── account-settings.tsx
│   │   ├── family-settings.tsx
│   │   ├── delete-account.tsx
│   │   ├── family-invite.tsx
│   │   └── contact-form.tsx
│   ├── _layout.tsx
│   └── index.tsx
├── components/
│   ├── ui/
│   │   ├── Button/
│   │   │   ├── Button.tsx
│   │   │   ├── Button.styles.ts
│   │   │   └── index.ts
│   │   ├── Input/
│   │   │   ├── Input.tsx
│   │   │   ├── Input.styles.ts
│   │   │   └── index.ts
│   │   ├── Modal/
│   │   │   ├── Modal.tsx
│   │   │   ├── Modal.styles.ts
│   │   │   └── index.ts
│   │   └── index.ts
│   ├── calendar/
│   │   ├── CalendarView/
│   │   │   ├── CalendarView.tsx
│   │   │   ├── CalendarView.styles.ts
│   │   │   └── index.ts
│   │   ├── DayCell/
│   │   │   ├── DayCell.tsx
│   │   │   ├── DayCell.styles.ts
│   │   │   └── index.ts
│   │   └── index.ts
│   ├── reservation/
│   │   ├── ReservationCard/
│   │   │   ├── ReservationCard.tsx
│   │   │   ├── ReservationCard.styles.ts
│   │   │   └── index.ts
│   │   ├── ReservationForm/
│   │   │   ├── ReservationForm.tsx
│   │   │   ├── ReservationForm.styles.ts
│   │   │   └── index.ts
│   │   ├── ReservationList/
│   │   │   ├── ReservationList.tsx
│   │   │   ├── ReservationList.styles.ts
│   │   │   └── index.ts
│   │   └── index.ts
│   ├── common/
│   │   ├── Header/
│   │   │   ├── Header.tsx
│   │   │   ├── Header.styles.ts
│   │   │   └── index.ts
│   │   ├── Loading/
│   │   │   ├── Loading.tsx
│   │   │   ├── Loading.styles.ts
│   │   │   └── index.ts
│   │   ├── ErrorBoundary/
│   │   │   ├── ErrorBoundary.tsx
│   │   │   └── index.ts
│   │   ├── WebView/
│   │   │   ├── WebView.tsx
│   │   │   ├── WebView.styles.ts
│   │   │   └── index.ts
│   │   └── index.ts
│   └── help/
│       ├── HelpCard/
│       │   ├── HelpCard.tsx
│       │   ├── HelpCard.styles.ts
│       │   └── index.ts
│       ├── FAQItem/
│       │   ├── FAQItem.tsx
│       │   ├── FAQItem.styles.ts
│       │   └── index.ts
│       ├── ContactForm/
│       │   ├── ContactForm.tsx
│       │   ├── ContactForm.styles.ts
│       │   └── index.ts
│       ├── VersionInfo/
│       │   ├── VersionInfo.tsx
│       │   ├── VersionInfo.styles.ts
│       │   └── index.ts
│       ├── LicenseList/
│       │   ├── LicenseList.tsx
│       │   ├── LicenseList.styles.ts
│       │   └── index.ts
│       └── index.ts
├── hooks/
│   ├── auth/
│   │   ├── useAuth.ts
│   │   ├── useAuthUser.ts
│   │   ├── usePasswordReset.ts
│   │   ├── useEmailRecovery.ts
│   │   ├── useAccountDeletion.ts
│   │   ├── useFamilyManagement.ts
│   │   └── index.ts
│   ├── firebase/
│   │   ├── useFirestore.ts
│   │   ├── useRealtimeData.ts
│   │   └── index.ts
│   ├── reservation/
│   │   ├── useReservations.ts
│   │   ├── useCreateReservation.ts
│   │   ├── useUpdateReservation.ts
│   │   ├── useDeleteReservation.ts
│   │   └── index.ts
│   ├── calendar/
│   │   ├── useCalendar.ts
│   │   ├── useCalendarData.ts
│   │   └── index.ts
│   ├── notification/
│   │   ├── useNotification.ts
│   │   ├── usePushNotification.ts
│   │   └── index.ts
│   └── common/
│       ├── useAsyncStorage.ts
│       ├── useNetworkStatus.ts
│       └── index.ts
├── services/
│   ├── firebase/
│   │   ├── config.ts
│   │   ├── auth.ts
│   │   ├── authHelpers.ts
│   │   ├── firestore.ts
│   │   ├── functions.ts
│   │   ├── messaging.ts
│   │   └── index.ts
│   ├── api/
│   │   ├── auth.ts
│   │   ├── passwordReset.ts
│   │   ├── emailRecovery.ts
│   │   ├── accountManagement.ts
│   │   ├── reservations.ts
│   │   ├── families.ts
│   │   ├── users.ts
│   │   ├── contact.ts
│   │   ├── feedback.ts
│   │   └── index.ts
│   ├── storage/
│   │   ├── asyncStorage.ts
│   │   ├── secureStore.ts
│   │   └── index.ts
│   └── index.ts
├── store/
│   ├── slices/
│   │   ├── auth.slice.ts
│   │   ├── user.slice.ts
│   │   ├── family.slice.ts
│   │   ├── activeFamily.slice.ts
│   │   ├── reservation.slice.ts
│   │   ├── calendar.slice.ts
│   │   ├── notification.slice.ts
│   │   └── app.slice.ts
│   ├── middlewares/
│   │   ├── logger.ts
│   │   └── persistence.ts
│   ├── store.ts
│   └── index.ts
├── types/
│   ├── api/
│   │   ├── auth.ts
│   │   ├── reservation.ts
│   │   ├── family.ts
│   │   ├── user.ts
│   │   ├── contact.ts
│   │   └── feedback.ts
│   ├── entities/
│   │   ├── User.ts
│   │   ├── Reservation.ts
│   │   ├── Family.ts
│   │   ├── FamilyMember.ts
│   │   ├── UserFamily.ts
│   │   ├── Notification.ts
│   │   ├── ContactMessage.ts
│   │   ├── FAQ.ts
│   │   ├── AppInfo.ts
│   │   └── License.ts
│   ├── navigation/
│   │   ├── AuthNavigator.ts
│   │   ├── MainNavigator.ts
│   │   └── index.ts
│   └── common/
│       ├── Response.ts
│       ├── Error.ts
│       └── Pagination.ts
├── utils/
│   ├── date/
│   │   ├── formatDate.ts
│   │   ├── dateCalculations.ts
│   │   └── index.ts
│   ├── validation/
│   │   ├── schemas.ts
│   │   ├── validators.ts
│   │   └── index.ts
│   ├── helpers/
│   │   ├── asyncWrapper.ts
│   │   ├── errorHandler.ts
│   │   ├── debounce.ts
│   │   └── index.ts
│   ├── formatters/
│   │   ├── text.ts
│   │   ├── number.ts
│   │   └── index.ts
│   └── index.ts
├── constants/
│   ├── theme/
│   │   ├── colors.ts
│   │   ├── fonts.ts
│   │   ├── spacing.ts
│   │   ├── dimensions.ts
│   │   └── index.ts
│   ├── config/
│   │   ├── app.ts
│   │   ├── api.ts
│   │   ├── contact.ts
│   │   └── index.ts
│   ├── data/
│   │   ├── faq.ts
│   │   ├── licenses.ts
│   │   ├── helpGuides.ts
│   │   └── index.ts
│   └── strings/
│       ├── ja.ts
│       ├── en.ts
│       └── index.ts
└── assets/
    ├── images/
    │   ├── icons/
    │   │   ├── calendar.png
    │   │   ├── car.png
    │   │   └── user.png
    │   ├── illustrations/
    │   │   ├── empty-state.png
    │   │   └── onboarding.png
    │   └── backgrounds/
    │       ├── splash.png
    │       └── login-bg.png
    ├── fonts/
    │   ├── NotoSansJP-Regular.ttf
    │   ├── NotoSansJP-Bold.ttf
    │   └── index.ts
    └── animations/
        ├── loading.json
        └── success.json

-----

### 3\. 設計原則と開発規約

#### **1. ファイル命名規則**

  - **コンポーネント**: `PascalCase` (例: `ReservationCard.tsx`)
  - **フック**: `camelCase` + `use`接頭辞 (例: `useReservations.ts`)
  - **ユーティリティ**: `camelCase` (例: `formatDate.ts`)

#### **2. インポート順序**

以下の順序でインポートを整理します。これは\*\*`eslint-plugin-import`\*\*によって自動的に適用されます。

1.  **React・React Native**
2.  **外部ライブラリ**
3.  **内部インポート**（絶対パス）
4.  **型インポート**

#### **3. コンポーネント構成パターン**

各コンポーネントは、以下のファイルで構成されることを基本とします。

  - `ComponentName.tsx`: メインコンポーネントの定義。
  - `ComponentName.styles.ts`: スタイル定義。
  - `index.ts`: コンポーネントのエクスポート。


これらの設計と規約に従うことで、一貫性があり、スケーラブルで、共同開発に適したアプリケーションを構築します。